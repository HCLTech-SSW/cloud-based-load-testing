{"version":3,"sources":["Components/Dashboard/Dashboard.js","Components/Create/Create.js","Components/Results/Results.js","Components/Running/Running.js","Components/History/History.js","Components/Details/Details.js","App.js","serviceWorker.js","index.js"],"names":["Dashboard","props","getItems","a","setState","Items","isLoading","API","get","data","length","noData","alert","state","this","welcome","className","tableBody","ref","map","item","key","testId","testName","testDescription","startTime","status","to","pathname","icon","faArrowAltCircleRight","size","Button","onClick","Table","borderless","responsive","Spinner","color","React","Component","Create","handleSubmit","values","formValues","form","current","reportValidity","headers","body","parseJson","trim","payload","taskCount","testNotifyEmail","testScenario","execution","concurrency","String","rampUp","concat","rampUpUnits","holdFor","holdForUnits","scenario","scenarios","requests","url","endpoint","method","post","response","console","log","history","push","error","listTasks","runningTasks","location","slice","JSON","stringify","createRef","bind","handleInputChange","setFormValue","handleBodyPayloadChange","handleHeadersChange","str","parse","err","value","event","target","name","warning","heading","createTestForm","Row","sm","Col","FormGroup","Label","for","Input","type","id","required","onChange","FormText","max","min","step","InputGroup","mode","theme","showPrintMargin","showGutter","highlightActiveLine","width","height","editorProps","$blockScrolling","setOptions","showLineNumbers","tabSize","disabled","onSubmit","e","preventDefault","Results","toggle","info","errors","results","rc","code","count","faInfoCircle","avg_rt","avg_lt","avg_ct","Math","round","bytes","throughput","succ","fail","testDuration","p100_0","p99_9","p99_0","p95_0","p90_0","p50_0","p0_0","src","metricWidgetImage","alt","Popover","placement","isOpen","PopoverHeader","PopoverBody","Running","provisioning","pending","running","task","tasks","lastStatus","href","awsConfig","ecs_dashboard","rel","faExternalLinkAlt","cw_dashboard","i","endTime","Details","deleteTest","del","cancelTest","reloadData","header","taskArns","getTest","Object","keys","componentDidMount","deleteModal","cancelModal","reporting","deleteToggle","cancelToggle","prevState","cancelled","details","History","Modal","ModalHeader","ModalBody","ModalFooter","Amplify","configure","loginTheme","sectionFooterSecondaryContent","AmplifyTheme","display","App","noMatch","signOut","toggleNavbar","collapsed","Auth","window","reload","Navbar","light","fixed","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","faBars","faPlusSquare","faSignOutAlt","path","exact","component","withAuthenticator","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8cAkHeA,E,kDAzFX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAQVC,SATmB,sBASR,4BAAAC,EAAA,6DACP,EAAKC,SAAS,CAACC,MAAM,GAAIC,WAAU,IAD5B,kBAGgBC,IAAIC,IAAI,OAAQ,cAHhC,OAGGC,EAHH,OAIH,EAAKL,SAAS,CAACC,MAAMI,EAAKJ,MAAOC,WAAU,IACjB,IAAtBG,EAAKJ,MAAMK,QACX,EAAKN,SAAS,CAACO,QAAO,IANvB,gDASHC,MAAM,EAAD,IATF,yDAPP,EAAKC,MAAQ,CACTR,MAAM,GACNC,WAAW,EACXK,QAAQ,GALG,E,gEAuBfG,KAAKZ,a,+BAGC,IAEEG,EAAUS,KAAKD,MAAfR,MAEFU,EACF,yBAAKC,UAAU,WACP,qFAINC,EACF,2BAAQC,IAAKJ,KAAKG,WACjBZ,EAAMc,KAAI,SAAAC,GAAI,OACX,wBAAIC,IAAKD,EAAKE,QACV,4BAAKF,EAAKE,QACV,4BAAKF,EAAKG,UACV,wBAAIP,UAAU,QAAQI,EAAKI,iBAC3B,4BAAKJ,EAAKK,WACV,wBAAIT,UAAWI,EAAKM,QAASN,EAAKM,QAClC,wBAAIV,UAAU,aACV,kBAAC,IAAD,CAAMW,GAAK,CACPC,SAAS,WACTf,MAAM,CAAES,OAAOF,EAAKE,UAGpB,kBAAC,IAAD,CAAiBO,KAAMC,IAAuBC,KAAK,cAQvE,OACI,6BACI,yBAAKf,UAAU,OACX,8CACA,kBAACgB,EAAA,EAAD,CAAQC,QAAUnB,KAAKZ,SAAW6B,KAAK,MAAvC,YAEJ,yBAAKf,UAAU,OACX,kBAACkB,EAAA,EAAD,CAAOlB,UAAU,YAAYmB,YAAU,EAACC,YAAU,GAC9C,+BACI,4BACI,uCACA,yCACA,gDACA,8CACA,2CACA,wBAAIpB,UAAU,aAAd,aAGNC,GAEJH,KAAKD,MAAMP,UAAW,yBAAKU,UAAU,WAAU,kBAACqB,EAAA,EAAD,CAASC,MAAM,eAAuB,+BAGzFxB,KAAKD,MAAMF,OAAQI,EAAU,mC,GApFvBwB,IAAMC,W,gGCuefC,G,yDA3dX,WAAYxC,GAAO,IAAD,8BACd,cAAMA,IAgEVyC,aAjEkB,sBAiEH,gCAAAvC,EAAA,yDAELwC,EAAS,EAAK9B,MAAM+B,WAErB,EAAKC,KAAKC,QAAQC,iBAJZ,0CAKA,GALA,UAONJ,EAAOK,UACRL,EAAOK,QAAU,MAEhBL,EAAOM,OACRN,EAAOM,KAAO,MAEb,EAAKC,UAAUP,EAAOK,QAAQG,QAbxB,yCAcAvC,MAAM,6CAdN,UAgBN,EAAKsC,UAAUP,EAAOM,KAAKE,QAhBrB,yCAiBAvC,MAAM,0CAjBN,cAmBX,EAAKR,SAAS,CAAEE,WAAW,IAnBhB,UAuBH8C,EAAU,CACV7B,SAAUoB,EAAOpB,SACjBC,gBAAiBmB,EAAOnB,gBACxB6B,UAAWV,EAAOU,UAChCC,gBAAiBX,EAAOW,gBACVC,aAAc,CACVC,UAAW,CAAC,CACRC,YAAad,EAAOc,YACpB,UAAWC,OAAOf,EAAOgB,QAAQC,OAAOjB,EAAOkB,aAC/C,WAAYH,OAAOf,EAAOmB,SAASF,OAAOjB,EAAOoB,cACjDC,SAAUrB,EAAOpB,WAErB0C,UAAU,eACLtB,EAAOpB,SAAW,CACf2C,SAAU,CACN,CACIC,IAAKxB,EAAOyB,SACZC,OAAQ1B,EAAO0B,OACfpB,KAAM,EAAKC,UAAUP,EAAOM,KAAKE,QACjCH,QAAS,EAAKE,UAAUP,EAAOK,QAAQG,cAQ3D,EAAKtC,MAAMS,SACX8B,EAAQ9B,OAAS,EAAKT,MAAMS,QAnDzB,UAsDgBf,IAAI+D,KAAK,OAAQ,aAAc,CAAErB,KAAMG,IAtDvD,QAsDDmB,EAtDC,OAuDPC,QAAQC,IAAI,gCAAiCF,GAC7C,EAAKtE,MAAMyE,QAAQC,KAAK,KAxDjB,mDA0DPH,QAAQI,MAAM,4BAAd,MACA,EAAKxE,SAAS,CAAEE,WAAW,IA3DpB,2DAjEG,EAoJlBuE,UApJkB,sBAoJN,sBAAA1E,EAAA,+EAEeI,IAAIC,IAAI,OAAQ,UAF/B,OAGgB,IAHhB,OAGKE,QACL,EAAKN,SAAS,CAAC0E,cAAa,IAJ5B,gDAOJlE,MAAM,EAAD,IAPD,yDAlJJ,EAAKX,MAAM8E,SAASlE,MAAMJ,KAAKa,OAC/B,EAAKT,MAAQ,CACTP,WAAW,EACXwE,cAAa,EACbxD,OAAQ,EAAKrB,MAAM8E,SAASlE,MAAMJ,KAAKa,OACvCsB,WAAY,CACRrB,SAAU,EAAKtB,MAAM8E,SAASlE,MAAMJ,KAAKc,SACzCC,gBAAiB,EAAKvB,MAAM8E,SAASlE,MAAMJ,KAAKe,gBAChD6B,UAAW,EAAKpD,MAAM8E,SAASlE,MAAMJ,KAAK4C,UAC1CI,YAAa,EAAKxD,MAAM8E,SAASlE,MAAMJ,KAAKgD,YAC5CK,QAAS,EAAK7D,MAAM8E,SAASlE,MAAMJ,KAAKqD,QAAQkB,MAAM,GAAI,GAC1DjB,aAAc,EAAK9D,MAAM8E,SAASlE,MAAMJ,KAAKqD,QAAQkB,OAAO,GAC5DrB,OAAQ,EAAK1D,MAAM8E,SAASlE,MAAMJ,KAAKkD,OAAOqB,MAAM,GAAI,GACxDnB,YAAa,EAAK5D,MAAM8E,SAASlE,MAAMJ,KAAKkD,OAAOqB,OAAO,GAC1DZ,SAAU,EAAKnE,MAAM8E,SAASlE,MAAMJ,KAAK2D,SACzCC,OAAQ,EAAKpE,MAAM8E,SAASlE,MAAMJ,KAAK4D,OACvCpB,KAAMgC,KAAKC,UAAU,EAAKjF,MAAM8E,SAASlE,MAAMJ,KAAKwC,MACpDD,QAASiC,KAAKC,UAAU,EAAKjF,MAAM8E,SAASlE,MAAMJ,KAAKuC,SACrEM,gBAAiB,EAAKrD,MAAM8E,SAASlE,MAAMJ,KAAK6C,kBAI1C,EAAKzC,MAAQ,CACTP,WAAW,EACXwE,cAAa,EACbxD,OAAQ,KACRsB,WAAY,CACRrB,SAAS,GACTC,gBAAiB,GACjB6B,UAAW,EACXI,YAAY,EACZK,QAAS,EACTC,aAAa,IACbJ,OAAQ,EACRE,YAAa,IACbO,SAAU,GACVC,OAAO,MACPpB,KAAM,GACND,QAAS,GACvBM,gBAAgB,KAMd,EAAKT,KAAON,IAAM4C,YAClB,EAAKzC,aAAe,EAAKA,aAAa0C,KAAlB,gBACpB,EAAKC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gBACzB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKG,wBAA0B,EAAKA,wBAAwBH,KAA7B,gBAC/B,EAAKI,oBAAsB,EAAKA,oBAAoBJ,KAAzB,gBAC3B,EAAKlC,UAAY,EAAKA,UAAUkC,KAAf,gBACjB,EAAKP,UAAY,EAAKA,UAAUO,KAAf,gBAtDH,E,sDAyDRK,GACN,IACI,OAAOR,KAAKS,MAAMD,GACpB,MAAOE,GACJ,OAAO,K,mCAmEHtE,EAAKuE,GACd,IAAMhD,EAAa9B,KAAKD,MAAM+B,WAC9BA,EAAWvB,GAAOuE,EAClB9E,KAAKV,SAAS,CAAEwC,iB,wCAGFiD,GACd,IAAMD,EAAQC,EAAMC,OAAOF,MACrBG,EAAOF,EAAMC,OAAOC,KAC1BjF,KAAKwE,aAAaS,EAAMH,K,8CAGJA,GACpB9E,KAAKwE,aAAa,OAAQM,K,0CAGVA,GAChB9E,KAAKwE,aAAa,UAAWM,K,0CAe7B9E,KAAK+D,c,+BAKL,IAAMmB,EACF,6BACI,yBAAKhF,UAAU,OACX,mDAEJ,uBAAGA,UAAU,WAAb,yMAKFiF,EACF,yBAAKjF,UAAU,OACX,mDAKFkF,EACF,6BACR,yBAAKlF,UAAU,OACd,qDACA,kBAACmF,EAAA,EAAD,CAAKC,GAAG,KACP,kBAACC,EAAA,EAAD,KACsB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,YAAX,aACA,kBAACC,EAAA,EAAD,CACIb,MAAO9E,KAAKD,MAAM+B,WAAWrB,SAC7BmF,KAAK,OACLX,KAAK,WACLY,GAAG,WACHC,UAAQ,EACRC,SAAU/F,KAAKuE,oBAEnB,kBAACyB,EAAA,EAAD,CAAUxE,MAAM,SAAhB,4DAK1B,kBAAC+D,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACyB,kBAACC,EAAA,EAAD,CAAOC,IAAI,mBAAX,oBACA,kBAACC,EAAA,EAAD,CACIb,MAAO9E,KAAKD,MAAM+B,WAAWpB,gBAC7BkF,KAAK,WACLX,KAAK,kBACLY,GAAG,kBACHC,UAAQ,EACRC,SAAU/F,KAAKuE,oBAEnB,kBAACyB,EAAA,EAAD,CAAUxE,MAAM,SAAhB,8CAM3B,kBAAC6D,EAAA,EAAD,CAAKC,GAAG,KACP,kBAACC,EAAA,EAAD,KACsB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,aAAX,uCACA,kBAACC,EAAA,EAAD,CACIb,MAAO9E,KAAKD,MAAM+B,WAAWS,UAC7BrC,UAAU,aACV0F,KAAK,SACLX,KAAK,YACLY,GAAG,YACHI,IAAK,GACLC,IAAK,EACLC,KAAM,EACNL,UAAQ,EACRC,SAAU/F,KAAKuE,oBAEnB,kBAACyB,EAAA,EAAD,CAAUxE,MAAM,SAAhB,sHAM1B,kBAAC+D,EAAA,EAAD,KACuB,kBAACC,EAAA,EAAD,KACG,kBAACC,EAAA,EAAD,CAAOC,IAAI,eAAX,8CACA,kBAACC,EAAA,EAAD,CACIb,MAAO9E,KAAKD,MAAM+B,WAAWa,YAC7BzC,UAAU,aACV0F,KAAK,SACLK,IAAK,IACLC,IAAK,EACLC,KAAM,EACNlB,KAAK,cACLY,GAAG,cACHC,UAAQ,EACRC,SAAU/F,KAAKuE,oBAEnB,kBAACyB,EAAA,EAAD,CAAUxE,MAAM,SAAhB,qEAM3B,kBAAC6D,EAAA,EAAD,CAAKC,GAAG,KACP,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACyB,kBAACC,EAAA,EAAD,CAAOC,IAAI,UAAX,SACA,kBAACU,EAAA,EAAD,CAAYlG,UAAU,qBAClB,kBAACyF,EAAA,EAAD,CACIb,MAAO9E,KAAKD,MAAM+B,WAAWe,OAC7B3C,UAAU,aACV0F,KAAK,SACLX,KAAK,SACLY,GAAG,SACHC,UAAQ,EACRC,SAAU/F,KAAKuE,oBARvB,OAWI,kBAACoB,EAAA,EAAD,CACIC,KAAK,SACL1F,UAAU,aACV+E,KAAK,cACLH,MAAO9E,KAAKD,MAAM+B,WAAWiB,YAC7B8C,GAAG,cACHE,SAAU/F,KAAKuE,mBAEf,4BAAQO,MAAM,KAAd,WACA,4BAAQA,MAAM,KAAd,aAIR,kBAACkB,EAAA,EAAD,CAAUxE,MAAM,SAAhB,2CAK1B,kBAAC+D,EAAA,EAAD,KACsB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,WAAX,YACA,kBAACU,EAAA,EAAD,CAAYlG,UAAU,qBAClB,kBAACyF,EAAA,EAAD,CACIb,MAAO9E,KAAKD,MAAM+B,WAAWkB,QAC7B9C,UAAU,aACV0F,KAAK,SACLM,IAAK,EACLjB,KAAK,UACLY,GAAG,UACHC,UAAQ,EACRC,SAAU/F,KAAKuE,oBATvB,OAYI,kBAACoB,EAAA,EAAD,CACIC,KAAK,SACLd,MAAO9E,KAAKD,MAAM+B,WAAWmB,aAC7B/C,UAAU,aACV+E,KAAK,eACLY,GAAG,eACHE,SAAU/F,KAAKuE,mBAEf,4BAAQO,MAAM,KAAd,WACA,4BAAQA,MAAM,KAAd,aAGR,kBAACkB,EAAA,EAAD,CAAUxE,MAAM,SAAhB,wCAO5B,yBAAKtB,UAAU,OACd,wCACA,kBAACmF,EAAA,EAAD,CAAKC,GAAG,KACP,kBAACC,EAAA,EAAD,KACsB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,YAAX,gCACA,kBAACC,EAAA,EAAD,CACIb,MAAO9E,KAAKD,MAAM+B,WAAWwB,SAC7BsC,KAAK,MACLX,KAAK,WACLY,GAAG,WACHC,UAAQ,EACRC,SAAU/F,KAAKuE,oBAEnB,kBAACyB,EAAA,EAAD,CAAUxE,MAAM,SAAhB,8FAM1B,kBAAC+D,EAAA,EAAD,KACsB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,UAAX,eACA,kBAACC,EAAA,EAAD,CACIb,MAAO9E,KAAKD,MAAM+B,WAAWyB,OAC7BrD,UAAU,aACV0F,KAAK,SACLX,KAAK,SACLY,GAAG,SACHC,UAAQ,EACRC,SAAU/F,KAAKuE,mBAEf,uCACA,uCACA,wCACA,2CAGJ,kBAACyB,EAAA,EAAD,CAAUxE,MAAM,SAAhB,0CAM3B,kBAAC6D,EAAA,EAAD,CAAKC,GAAG,KACP,kBAACC,EAAA,EAAD,KACsB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,mBAAX,oCACA,kBAAC,IAAD,CACIW,KAAK,OACLC,MAAM,SACNC,iBAAiB,EACjBC,YAAY,EACZ1B,MAAO9E,KAAKD,MAAM+B,WAAWI,QAC7BuE,qBAAqB,EACrBV,SAAU/F,KAAK0E,oBACfO,KAAK,UACLyB,MAAM,OACNC,OAAO,QACPC,YAAa,CAACC,iBAAiB,GAC/BC,WAAY,CACRC,iBAAiB,EACjBC,QAAS,KAGjB,kBAAChB,EAAA,EAAD,CAAUxE,MAAM,SAAhB,uFAK1B,kBAAC+D,EAAA,EAAD,KACsB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,6CACA,kBAAC,IAAD,CACIY,KAAK,OACLC,MAAM,SACNC,iBAAiB,EACjBC,YAAY,EACZC,qBAAqB,EACrBV,SAAU/F,KAAKyE,wBACfQ,KAAK,cACLH,MAAO9E,KAAKD,MAAM+B,WAAWK,KAC7BuE,MAAM,OACNC,OAAO,QACPC,YAAa,CAACC,iBAAiB,GAC/BC,WAAY,CACRC,iBAAiB,EACjBC,QAAS,KAGjB,kBAAChB,EAAA,EAAD,CAAUxE,MAAM,SAAhB,gFAO5B,yBAAKtB,UAAU,OACd,kBAACmF,EAAA,EAAD,CAAKC,GAAG,KACP,kBAACC,EAAA,EAAD,KACsB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,mBAAX,yBACA,kBAACC,EAAA,EAAD,CACIb,MAAO9E,KAAKD,MAAM+B,WAAWU,gBAC7BoD,KAAK,OACLX,KAAK,kBACLY,GAAG,kBACHC,UAAQ,EACRC,SAAU/F,KAAKuE,oBAEnB,kBAACyB,EAAA,EAAD,CAAUxE,MAAM,SAAhB,2HAK1B,kBAAC+D,EAAA,EAAD,KACsB,kBAACrE,EAAA,EAAD,CACIhB,UAAU,SACVe,KAAK,KACLE,QAASnB,KAAK4B,aACdqF,SAAUjH,KAAKD,MAAMiE,cAJzB,kBAcpB,OACI,6BACI,0BAAM5D,IAAKJ,KAAK+B,KAAMmF,SAAU,SAAAC,GAAC,OAAIA,EAAEC,mBAEjCpH,KAAKD,MAAMiE,aAAckB,EAAUC,EAErC,6BACKnF,KAAKD,MAAMP,UAAW,yBAAKU,UAAU,WAAU,kBAACqB,EAAA,EAAD,CAASC,MAAM,eAAuB4D,S,GArdzF3D,IAAMC,Y,+DCyHZ2F,E,kDArIX,WAAYlI,GAAQ,IAAD,8BACf,cAAMA,IAEDmI,OAAS,EAAKA,OAAOhD,KAAZ,gBACd,EAAKvE,MAAQ,CACXwH,MAAM,GALO,E,qDAUfvH,KAAKV,SAAS,CACViI,MAAOvH,KAAKD,MAAMwH,S,+BAKtB,IAEIC,EAFEC,EAAUzH,KAAKb,MAAMQ,KAAK8H,SAAW,GAa3C,OAVIA,EAAQC,IAAMD,EAAQC,GAAG9H,OAAS,IAClC4H,EAASC,EAAQC,GAAGrH,KAAI,SAACwE,GAAD,OACpB,kBAACU,EAAA,EAAD,CAAKD,GAAG,IAAI/E,IAAKsE,EAAI8C,MACjB,yBAAKzH,UAAU,gBACX,oCAAU2E,EAAI8C,KAAd,KAAwB,8BAAO9C,EAAI+C,aAO/C,6BACI,yBAAK1H,UAAU,OACX,4CACA,kBAACgB,EAAA,EAAD,CAAQ2E,GAAG,OAAOrE,MAAM,QAAO,kBAAC,IAAD,CAAiBqE,GAAG,OAAO9E,KAAM8G,MAAhE,SACA,kBAACxC,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKD,GAAG,KACJ,yBAAKpF,UAAU,UAAf,oBAEI,2BAAIuH,EAAQK,OAAZ,OAGR,kBAACvC,EAAA,EAAD,CAAKD,GAAG,KACJ,yBAAKpF,UAAU,UAAf,cAEI,2BAAIuH,EAAQM,OAAZ,OAGR,kBAACxC,EAAA,EAAD,CAAKD,GAAG,KACJ,yBAAKpF,UAAU,UAAf,qBAEI,2BAAIuH,EAAQO,OAAZ,OAGR,kBAACzC,EAAA,EAAD,CAAKD,GAAG,KACJ,yBAAKpF,UAAU,UAAf,gBAEI,2BAAK+H,KAAKC,MAAsB,IAAhBT,EAAQU,OAAe,GAAvC,YAIZ,kBAAC9C,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKD,GAAG,KACJ,yBAAKpF,UAAU,UACX,8CAAsB,8BAAOuH,EAAQW,cAG7C,kBAAC7C,EAAA,EAAD,CAAKD,GAAG,KACJ,yBAAKpF,UAAU,UACX,6CAAqB,8BAAOuH,EAAQY,QAG5C,kBAAC9C,EAAA,EAAD,CAAKD,GAAG,KACJ,yBAAKpF,UAAU,UACX,2CAAmB,8BAAOuH,EAAQa,QAG1C,kBAAC/C,EAAA,EAAD,CAAKD,GAAG,KACJ,yBAAKpF,UAAU,UACX,iDAAyB,8BAAO+H,KAAKC,MAAMT,EAAQc,aAAc,IAAxC,QAIrC,kBAAClD,EAAA,EAAD,KACEmC,GAEF,kBAACnC,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKD,GAAG,KACJ,wDACA,yBAAKpF,UAAU,UACX,oCAAY,8BAAOuH,EAAQe,OAAf,MAEhB,yBAAKtI,UAAU,UACX,qCAAa,8BAAOuH,EAAQgB,MAAf,MAEjB,yBAAKvI,UAAU,UACX,mCAAW,8BAAOuH,EAAQiB,MAAf,MAEf,yBAAKxI,UAAU,UACX,mCAAW,8BAAOuH,EAAQkB,MAAf,MAEf,yBAAKzI,UAAU,UACX,mCAAW,8BAAOuH,EAAQmB,MAAf,MAEf,yBAAK1I,UAAU,UACX,mCAAW,8BAAOuH,EAAQoB,MAAf,MAEf,yBAAK3I,UAAU,UACX,kCAAU,8BAAOuH,EAAQqB,KAAf,OAGlB,kBAACvD,EAAA,EAAD,CAAKD,GAAG,KACJ,yBAAKyD,IAAG,iCAA4B/I,KAAKb,MAAMQ,KAAKqJ,mBAAqBC,IAAI,YAKjG,kBAACC,EAAA,EAAD,CAAShJ,UAAU,OAAOiJ,UAAU,MAAMC,OAAQpJ,KAAKD,MAAMwH,KAAMvC,OAAO,OAAOsC,OAAQtH,KAAKsH,QAC5F,kBAAC+B,EAAA,EAAD,wBACA,kBAACC,EAAA,EAAD,KACE,4BAAI,yDAAJ,2DACA,4BAAI,mDAAJ,qDACA,4BAAI,2DAAJ,6DACA,4BAAI,6CAAJ,qEACA,4BAAI,2CAAJ,mH,GA5HU7H,IAAMC,WCgFb6H,E,uKA1EP,IAAIC,EAAe,EACfC,EAAU,EACVC,EAAU,EAEd,IAAK,IAAIC,KAAQ3J,KAAKb,MAAMQ,KAAKiK,MAE7B,OAAQ5J,KAAKb,MAAMQ,KAAKiK,MAAMD,GAAME,YAChC,IAAK,iBACCL,EACF,MACJ,IAAK,YACCC,EACF,MACJ,IAAK,YACCC,EAKd,OACI,6BACI,yBAAKxJ,UAAU,OACX,6CACA,0BAAMA,UAAU,WAAhB,sDACuD,uBAAGA,UAAU,YAChE4J,KAAOC,UAAUC,cACjBhF,OAAO,SACPiF,IAAI,uBAH+C,sBAI5B,kBAAC,IAAD,CAAiBhJ,KAAK,KAAKF,KAAMmJ,QAI5D,kBAAC7E,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKD,GAAG,KACJ,yBAAKpF,UAAU,UACX,0CAAkB,8BAAOF,KAAKb,MAAMQ,KAAKiK,MAAMhK,OAA7B,OAAyCI,KAAKb,MAAMQ,KAAK4C,aAGnF,kBAACgD,EAAA,EAAD,CAAKD,GAAG,KACJ,yBAAKpF,UAAU,UACX,kDAA0B,8BAAOsJ,KAGzC,kBAACjE,EAAA,EAAD,CAAKD,GAAG,KACJ,yBAAKpF,UAAU,UACX,6CAAqB,8BAAOuJ,KAGpC,kBAAClE,EAAA,EAAD,CAAKD,GAAG,KACJ,yBAAKpF,UAAU,UACX,6CAAqB,8BAAOwJ,OAK5C,yBAAKxJ,UAAU,OACf,2DACI,uBAAGA,UAAU,WAAb,kEAC+D,uBAAGA,UAAU,YACxE4J,KAAOC,UAAUI,aACjBnF,OAAO,SACPiF,IAAI,uBAHuD,uCAIvB,kBAAC,IAAD,CAAiBhJ,KAAK,KAAKF,KAAMmJ,QAGzE,uBAAGhK,UAAU,QAAb,wK,GArEEuB,IAAMC,WCgDb2F,E,uKAjDP,IAAMzD,EAAU5D,KAAKb,MAAMQ,KAAKiE,SAAW,GAE3C,OACI,6BAEA,yBAAK1D,UAAU,OACf,+CACA,kBAACkB,EAAA,EAAD,CAAOC,YAAU,EAACC,YAAU,GACxB,+BACI,4BACI,uCACA,qCACA,qCACA,qCACA,oCACA,qCACA,qCACA,mCACA,mCACA,mCACA,oCAGR,+BACKsC,EAAQvD,KAAK,SAAA+J,GAAC,OACX,wBAAI7J,IAAO6J,EAAEvE,IACT,4BAAMuE,EAAEC,SACR,4BAAMD,EAAE3C,QAAQK,QAChB,4BAAMsC,EAAE3C,QAAQM,QAChB,4BAAMqC,EAAE3C,QAAQO,QAChB,4BAAMoC,EAAE3C,QAAQe,QAChB,4BAAM4B,EAAE3C,QAAQgB,OAChB,4BAAM2B,EAAE3C,QAAQiB,OAChB,4BAAM0B,EAAE3C,QAAQkB,OAChB,4BAAMyB,EAAE3C,QAAQmB,OAChB,4BAAMwB,EAAE3C,QAAQoB,OAChB,4BAAMuB,EAAE3C,QAAQqB,kB,GAvCtBrH,IAAMC,WCuQb4I,E,kDA/PX,WAAYnL,GAAQ,IAAD,8BACf,cAAMA,IAuCVoL,WAxCmB,sBAwCP,4BAAAlL,EAAA,6DACAmB,EAAW,EAAKT,MAAMS,OAAtBA,OADA,kBAGEf,IAAI+K,IAAI,OAAR,qBAA8BhK,IAHhC,sDAKJV,MAAM,EAAD,IALD,OAOR,EAAKX,MAAMyE,QAAQC,KAAK,aAPhB,yDAxCO,EAkDnB4G,WAlDmB,sBAkDN,4BAAApL,EAAA,6DACDmB,EAAW,EAAKT,MAAMS,OAAtBA,OADC,kBAGCf,IAAI+D,KAAK,OAAT,qBAA+BhD,IAHhC,sDAKLV,MAAM,EAAD,IALA,OAOT,EAAKX,MAAMyE,QAAQC,KAAK,aAPf,yDAlDM,EA4DnB6G,WA5DmB,sBA4DN,sBAAArL,EAAA,6DACT,EAAKC,SAAS,CACVE,WAAW,EACXG,KAAK,CACD8H,QAAQ,GACR7D,QAAQ,GACRjB,YAAY,KACZE,OAAO,KACPG,QAAS,KACTM,SAAS,KACTC,OAAO,KACPpB,KAAK,GACLwI,OAAO,GACPC,SAAS,MAbR,SAgBH,EAAKC,UAhBF,2CA5DM,EA+EnBA,QA/EmB,sBA+ET,8BAAAxL,EAAA,6DACEmB,EAAW,EAAKT,MAAMS,OAAtBA,OADF,kBAGiBf,IAAIC,IAAI,OAAR,qBAA8Bc,IAH/C,QAGIb,EAHJ,QAIGgD,YAAchD,EAAK8C,aAAaC,UAAU,GAAGC,YAClDhD,EAAKkD,OAASlD,EAAK8C,aAAaC,UAAU,GAAG,WAC7C/C,EAAKqD,QAAUrD,EAAK8C,aAAaC,UAAU,GAAG,YAC9C/C,EAAK2D,SAAW3D,EAAK8C,aAAaU,UAAU2H,OAAOC,KAAKpL,EAAK8C,aAAaU,WAAW,IAAIC,SAAS,GAAGC,IACrG1D,EAAK4D,OAAS5D,EAAK8C,aAAaU,UAAU2H,OAAOC,KAAKpL,EAAK8C,aAAaU,WAAW,IAAIC,SAAS,GAAGG,OACnG5D,EAAKwC,KAAOxC,EAAK8C,aAAaU,UAAU2H,OAAOC,KAAKpL,EAAK8C,aAAaU,WAAW,IAAIC,SAAS,GAAGjB,KACjGxC,EAAKuC,QAAUvC,EAAK8C,aAAaU,UAAU2H,OAAOC,KAAKpL,EAAK8C,aAAaU,WAAW,IAAIC,SAAS,GAAGlB,QAEpG,EAAK5C,SAAS,CACVE,WAAU,EACVG,KAAKA,IAdP,kDAiBF+D,QAAQC,IAAR,MACA7D,MAAM,EAAD,IAlBH,0DA/ES,EAqGnBkL,kBArGmB,sBAqGA,sBAAA3L,EAAA,sEACT,EAAKwL,UADI,2CAnGf,EAAK9K,MAAQ,CACTP,WAAW,EACXyL,aAAa,EACbC,aAAa,EACb1K,OAAQrB,EAAM8E,SAASlE,MACvBJ,KAAK,CACD8H,QAAQ,GACR7D,QAAQ,GACRjB,YAAY,KACZE,OAAO,KACPG,QAAS,KACTM,SAAS,KACTsH,SAAS,GACTnI,aAAa,CACTC,UAAU,GACVyI,UAAU,GACVhI,UAAU,MAItB,EAAKiI,aAAe,EAAKA,aAAa9G,KAAlB,gBACpB,EAAKiG,WAAa,EAAKA,WAAWjG,KAAhB,gBAClB,EAAK+G,aAAe,EAAKA,aAAa/G,KAAlB,gBACpB,EAAKmG,WAAa,EAAKA,WAAWnG,KAAhB,gBAzBH,E,2DA6BftE,KAAKV,UAAS,SAAAgM,GAAS,MAAK,CACxBL,aAAcK,EAAUL,kB,qCAK5BjL,KAAKV,UAAS,SAAAgM,GAAS,MAAK,CACxBJ,aAAcI,EAAUJ,kB,+BAqEtB,IAAD,OAEGvL,EAASK,KAAKD,MAAdJ,KAEF4L,EACF,yBAAKrL,UAAU,OACX,4CACA,+EAIFsL,EACF,6BACM,WACE,OAAQ7L,EAAKiB,QACb,IAAK,UACD,OACI,yBAAKV,UAAU,OACf,iDACA,kBAACgB,EAAA,EAAD,CAAQM,MAAM,SAASL,QAAS,EAAKkK,aAAcpK,KAAK,MAAxD,UACA,kBAACC,EAAA,EAAD,CAAQC,QAAU,EAAKuJ,WAAazJ,KAAK,MAAzC,YAGR,QACI,OACI,yBAAKf,UAAU,OACf,iDACA,kBAACgB,EAAA,EAAD,CAAQM,MAAM,SAASL,QAAS,EAAKiK,aAAcnK,KAAK,MAAxD,UACA,kBAAC,IAAD,CAAMJ,GAAK,CACHC,SAAS,UACTf,MAAM,CAAEJ,UAEhB,kBAACuB,EAAA,EAAD,CAAQD,KAAK,MAAb,aAnBV,GA0BF,yBAAKf,UAAU,OACX,kBAACmF,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKD,GAAG,KACJ,kBAACD,EAAA,EAAD,CAAKnF,UAAU,UACX,kBAACqF,EAAA,EAAD,CAAKD,GAAG,KAAI,uCACZ,kBAACC,EAAA,EAAD,CAAKD,GAAG,KAAK3F,EAAKa,SAEtB,kBAAC6E,EAAA,EAAD,CAAKnF,UAAU,UACX,kBAACqF,EAAA,EAAD,CAAKD,GAAG,KAAI,yCACZ,kBAACC,EAAA,EAAD,CAAKD,GAAG,KAAK3F,EAAKc,WAEtB,kBAAC4E,EAAA,EAAD,CAAKnF,UAAU,UACX,kBAACqF,EAAA,EAAD,CAAKD,GAAG,KAAI,gDACZ,kBAACC,EAAA,EAAD,CAAMD,GAAG,KAAK3F,EAAKe,kBAEvB,kBAAC2E,EAAA,EAAD,CAAKnF,UAAU,UACX,kBAACqF,EAAA,EAAD,CAAKD,GAAG,KAAI,oDACZ,kBAACC,EAAA,EAAD,CAAMD,GAAG,KAAM3F,EAAK2D,WAGxB,kBAAC+B,EAAA,EAAD,CAAKnF,UAAU,UACX,kBAACqF,EAAA,EAAD,CAAKD,GAAG,KAAI,iDACZ,kBAACC,EAAA,EAAD,CAAMD,GAAG,KAAMnB,KAAKC,UAAUzE,EAAKwC,QAEvC,kBAACkD,EAAA,EAAD,CAAKnF,UAAU,UACX,kBAACqF,EAAA,EAAD,CAAKD,GAAG,KAAI,oDACZ,kBAACC,EAAA,EAAD,CAAMD,GAAG,KAAMnB,KAAKC,UAAUzE,EAAKuC,YAG3C,kBAACqD,EAAA,EAAD,CAAKD,GAAG,KACR,kBAACD,EAAA,EAAD,CAAKnF,UAAU,UACP,kBAACqF,EAAA,EAAD,CAAKD,GAAG,KAAI,2CACZ,kBAACC,EAAA,EAAD,CAAKrF,UAAWP,EAAKiB,OAAQ0E,GAAG,KAAK3F,EAAKiB,SAE9C,kBAACyE,EAAA,EAAD,CAAKnF,UAAU,UACX,kBAACqF,EAAA,EAAD,CAAKD,GAAG,KAAI,wCACZ,kBAACC,EAAA,EAAD,CAAMD,GAAG,KAAK3F,EAAKgB,YAEvB,kBAAC0E,EAAA,EAAD,CAAKnF,UAAU,UACX,kBAACqF,EAAA,EAAD,CAAKD,GAAG,KAAI,mEACZ,kBAACC,EAAA,EAAD,CAAMD,GAAG,KAAK3F,EAAK4C,YAEvB,kBAAC8C,EAAA,EAAD,CAAKnF,UAAU,UACX,kBAACqF,EAAA,EAAD,CAAKD,GAAG,KAAI,2CACZ,kBAACC,EAAA,EAAD,CAAMD,GAAG,KAAM3F,EAAK4D,SAExB,kBAAC8B,EAAA,EAAD,CAAKnF,UAAU,UACX,kBAACqF,EAAA,EAAD,CAAKD,GAAG,KAAI,2EACZ,kBAACC,EAAA,EAAD,CAAMD,GAAG,KAAM3F,EAAKgD,cAExB,kBAAC0C,EAAA,EAAD,CAAKnF,UAAU,UACX,kBAACqF,EAAA,EAAD,CAAKD,GAAG,KAAI,qCACZ,kBAACC,EAAA,EAAD,CAAMD,GAAG,KAAM3F,EAAKkD,SAExB,kBAACwC,EAAA,EAAD,CAAKnF,UAAU,UACX,kBAACqF,EAAA,EAAD,CAAKD,GAAG,KAAI,wCACZ,kBAACC,EAAA,EAAD,CAAMD,GAAG,KAAM3F,EAAKqD,aAMlC,WACE,OAAQrD,EAAKiB,QACb,IAAK,WACD,OAAO,kBAAC,EAAD,CAASjB,KAAMA,IAC1B,IAAK,YACD,OAAO,6BAAM4L,GACjB,QACI,OAAO,kBAAC,EAAD,CAAS5L,KAAMA,KAP5B,GAWc,YAAfA,EAAKiB,OAAqB,8BAAe,kBAAC6K,EAAD,CAAS9L,KAAMA,KAKjE,OACI,6BAEMK,KAAKD,MAAMP,UAAY,yBAAKU,UAAU,WAAU,kBAACqB,EAAA,EAAD,CAASC,MAAM,eAAuBgK,EAExF,kBAACE,EAAA,EAAD,CAAOtC,OAAQpJ,KAAKD,MAAMkL,YAAa3D,OAAQtH,KAAKoL,cAChD,kBAACO,EAAA,EAAD,gBACA,kBAACC,EAAA,EAAD,qEAGA,kBAACC,EAAA,EAAD,KACI,kBAAC3K,EAAA,EAAD,CAAQM,MAAM,OAAOP,KAAK,KAAKE,QAASnB,KAAKoL,cAA7C,UACA,kBAAClK,EAAA,EAAD,CAAQM,MAAM,SAASP,KAAK,KAAKE,QAASnB,KAAKuK,YAA/C,YAIR,kBAACmB,EAAA,EAAD,CAAOtC,OAAQpJ,KAAKD,MAAMmL,YAAa5D,OAAQtH,KAAKqL,cAChD,kBAACM,EAAA,EAAD,gBACA,kBAACC,EAAA,EAAD,2DAGA,kBAACC,EAAA,EAAD,KACI,kBAAC3K,EAAA,EAAD,CAAQM,MAAM,OAAOP,KAAK,KAAKE,QAASnB,KAAKqL,cAA7C,UACA,kBAACnK,EAAA,EAAD,CAAQM,MAAM,SAASP,KAAK,KAAKE,QAASnB,KAAKyK,YAA/C,sB,GAvPFhJ,IAAMC,WCgB5BoK,IAAQC,UAAUhC,WAGlB,IAAMiC,GAAa,CACjBC,8BAA8B,2BACzBC,IAAaD,+BADW,IAE3BE,QAAQ,UAKNC,G,kDAEJ,WAAYjN,GAAQ,IAAD,8BACjB,cAAMA,IACDkN,QAAU,EAAKA,QAAQ/H,KAAb,gBACf,EAAKgI,QAAU,EAAKA,QAAQhI,KAAb,gBACf,EAAKiI,aAAe,EAAKA,aAAajI,KAAlB,gBACpB,EAAKvE,MAAQ,CACXyM,WAAW,GANI,E,uDAUI,IAAbvI,EAAY,EAAZA,SACR,OACE,6BACE,yDAC4B,8BAAOA,EAASnD,c,qCAOhDd,KAAKV,SAAS,CACZkN,WAAYxM,KAAKD,MAAMyM,c,gCAKzBC,IAAKH,UACLI,OAAOzI,SAAS0I,W,+BAKhB,OACE,6BACE,kBAAC,IAAD,KACE,kBAACC,EAAA,EAAD,CAAQpL,MAAM,QAAQqL,OAAK,EAACC,MAAM,MAAMC,OAAO,MAC7C,kBAACC,EAAA,EAAD,CAAalD,KAAK,KAAlB,2CACA,kBAACmD,EAAA,EAAD,CAAe9L,QAASnB,KAAKuM,aAAcrM,UAAU,SACrD,kBAACgN,EAAA,EAAD,CAAU9D,QAASpJ,KAAKD,MAAMyM,UAAWW,QAAM,GAC/C,kBAACC,EAAA,EAAD,CAAKlN,UAAU,UAAUiN,QAAM,GAC/B,kBAACE,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMxM,GAAI,aAAcX,UAAU,YAChC,kBAAC,IAAD,CAAiB2F,GAAG,OAAO9E,KAAMuM,MADnC,eAIF,kBAACD,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMxM,GAAK,CACLC,SAAS,UACTf,MAAM,CAAEJ,KAAK,KAEbO,UAAU,YAEd,kBAAC,IAAD,CAAiB2F,GAAG,OAAO9E,KAAMwM,MANnC,kBAUA,kBAACH,EAAA,EAAD,CAAKlN,UAAU,UAAUiN,QAAM,GAC7B,kBAACE,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMxM,GAAG,GAAGM,QAASnB,KAAKsM,QAASpM,UAAU,YAC3C,kBAAC,IAAD,CAAiB2F,GAAG,OAAO9E,KAAMyM,MADnC,iBAQR,yBAAKtN,UAAU,QACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuN,KAAK,IAAIC,OAAK,EAACC,UAAWzO,IACjC,kBAAC,IAAD,CAAOuO,KAAK,aAAaC,OAAK,EAACC,UAAWzO,IAC1C,kBAAC,IAAD,CAAOuO,KAAK,WAAWE,UAAWhM,IAClC,kBAAC,IAAD,CAAO8L,KAAK,YAAYE,UAAWrD,IACnC,kBAAC,IAAD,CAAOqD,UAAW3N,KAAKqM,kB,GA3EnB5K,IAAMC,WAsFTkM,eAAkBxB,IAAI,EAAM,GAAG,KAAKJ,ICzH/B6B,QACW,cAA7BnB,OAAOzI,SAAS6J,UAEe,UAA7BpB,OAAOzI,SAAS6J,UAEhBpB,OAAOzI,SAAS6J,SAASC,MACvB,2DCCNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD8G3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.0a39971a.chunk.js","sourcesContent":["/*******************************************************************************\n * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved. \n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0    \n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n *\n ********************************************************************************/\nimport React from 'react';\nimport {Table, Spinner, Button } from 'reactstrap';\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faArrowAltCircleRight } from '@fortawesome/free-solid-svg-icons';\nimport { API } from 'aws-amplify';\n\n\nclass Dashboard extends React.Component {\n\n    constructor(props) { \n        super(props); \n        this.state = {\n            Items:[],\n            isLoading: true,\n            noData: false\n        }\n    };\n\n    getItems = async () => {\n        this.setState({Items:[], isLoading:true});\n        try {\n            const data = await API.get('cblt', '/scenarios');\n            this.setState({Items:data.Items, isLoading:false});\n            if (data.Items.length === 0 ) {\n                this.setState({noData:true});\n            }\n        } catch (err) {\n            alert(err);\n        }\n    };\n\n    componentDidMount() { \n        this.getItems();\n    };  \n\n    render() {\n\n        const { Items } = this.state;\n\n        const welcome = (\n            <div className=\"welcome\">\n                    <h2>To get started select Create test from the top menu.</h2>\n            </div>\n        ) \n\n        const tableBody = (\n            <tbody  ref={this.tableBody} >\n            {Items.map(item => (\n                <tr key={item.testId}>\n                    <td>{item.testId}</td>\n                    <td>{item.testName}</td>\n                    <td className=\"desc\">{item.testDescription}</td>\n                    <td>{item.startTime}</td>\n                    <td className={item.status}>{item.status}</td>\n                    <td className=\"td-center\">\n                        <Link to= {{\n                            pathname:\"/details\",\n                            state:{ testId:item.testId}\n                            }}\n                        >\n                            <FontAwesomeIcon icon={faArrowAltCircleRight} size=\"lg\" />\n                        </Link>\n                    </td>\n                </tr>\n            ))}\n            </tbody>\n        )\n\n        return (\n            <div>\n                <div className=\"box\">\n                    <h1>Test Scenarios</h1>\n                    <Button onClick={ this.getItems } size=\"sm\">Refresh</Button>\n                </div>\n                <div className=\"box\">\n                    <Table className=\"dashboard\" borderless responsive >\n                        <thead>\n                            <tr>\n                                <th>Test Id</th>\n                                <th>Test Name</th>\n                                <th>Test Description</th>\n                                <th>Last Run (UTC)</th>\n                                <th>Test Status</th>\n                                <th className=\"td-center\">Details</th>\n                            </tr>\n                        </thead>\n                        { tableBody }\n                    </Table>\n                    { this.state.isLoading? <div className=\"loading\"><Spinner color=\"secondary\" /></div> : <div></div> }\n                   \n                </div>\n                { this.state.noData? welcome : <div></div> }\n            </div>\n        )\n    }\n\n}\n\nexport default Dashboard;\n","/*******************************************************************************\n * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved. \n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0    \n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n *\n ********************************************************************************/\nimport React from 'react';\nimport { API } from 'aws-amplify';\nimport 'brace';\nimport AceEditor from 'react-ace';\nimport {\n    Col,\n    Row,\n    Button,\n    FormGroup,\n    Label,\n    Input,\n    FormText,\n    Spinner,\n    InputGroup,\n} from 'reactstrap';\n\nimport 'brace/theme/github';\n\nclass Create extends React.Component {\n\n    constructor(props){\n        super(props);\n        if (this.props.location.state.data.testId) {\n            this.state = {\n                isLoading: false,\n                runningTasks:false,\n                testId: this.props.location.state.data.testId,\n                formValues: {\n                    testName: this.props.location.state.data.testName,\n                    testDescription: this.props.location.state.data.testDescription,\n                    taskCount: this.props.location.state.data.taskCount,\n                    concurrency: this.props.location.state.data.concurrency,\n                    holdFor: this.props.location.state.data.holdFor.slice(0, -1),\n                    holdForUnits: this.props.location.state.data.holdFor.slice(-1),\n                    rampUp: this.props.location.state.data.rampUp.slice(0, -1),\n                    rampUpUnits: this.props.location.state.data.rampUp.slice(-1),\n                    endpoint: this.props.location.state.data.endpoint,\n                    method: this.props.location.state.data.method,\n                    body: JSON.stringify(this.props.location.state.data.body),\n                    headers: JSON.stringify(this.props.location.state.data.headers),\n\t\t    testNotifyEmail: this.props.location.state.data.testNotifyEmail\n                }\n            }\n        } else {\n            this.state = {\n                isLoading: false,\n                runningTasks:false,\n                testId: null,\n                formValues: {\n                    testName:'',\n                    testDescription: '',\n                    taskCount: 0,\n                    concurrency:0,\n                    holdFor: 0,\n                    holdForUnits:'m',\n                    rampUp: 0,\n                    rampUpUnits: 'm',\n                    endpoint: '',\n                    method:'GET',\n                    body: '',\n                    headers: '',\n\t\t    testNotifyEmail:''\n                }\n            };\n            \n        }\n\n        this.form = React.createRef();\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.setFormValue = this.setFormValue.bind(this);\n        this.handleBodyPayloadChange = this.handleBodyPayloadChange.bind(this);\n        this.handleHeadersChange = this.handleHeadersChange.bind(this);\n        this.parseJson = this.parseJson.bind(this);\n        this.listTasks = this.listTasks.bind(this);\n    }\n\n    parseJson(str) {\n        try { \n            return JSON.parse(str) \n        } catch (err) {\n             return false;\n        } \n    }\n    \n    handleSubmit = async () => {\n\n        const values = this.state.formValues;\n\n        if (!this.form.current.reportValidity() ) {\n            return false;\n        }\n        if (!values.headers) {\n            values.headers = '{}';\n        }\n        if (!values.body) {\n            values.body = '{}';\n        }\n        if (!this.parseJson(values.headers.trim())) {\n            return alert('WARINING: headers text is not valid JSON');\n        }\n        if (!this.parseJson(values.body.trim())) {\n            return alert('WARINING: body text is not valid JSON');\n        }\n        this.setState({ isLoading: true })\n\n        try {\n\n            let payload = {\n                testName: values.testName,\n                testDescription: values.testDescription,\n                taskCount: values.taskCount,\n\t\ttestNotifyEmail: values.testNotifyEmail,\n                testScenario: {\n                    execution: [{\n                        concurrency: values.concurrency,\n                        \"ramp-up\": String(values.rampUp).concat(values.rampUpUnits),\n                        \"hold-for\": String(values.holdFor).concat(values.holdForUnits),\n                        scenario: values.testName,\n                    }],\n                    scenarios: {\n                        [values.testName]: {\n                            requests: [\n                                {\n                                    url: values.endpoint,\n                                    method: values.method,\n                                    body: this.parseJson(values.body.trim()),\n                                    headers: this.parseJson(values.headers.trim())\n                                }\n                            ]\n                        }\n                    }\n                }\n            };\n\n            if (this.state.testId) {\n                payload.testId = this.state.testId; \n            }\n    \n            const response = await API.post('cblt', '/scenarios', { body: payload });\n            console.log('Scenario created successfully', response);\n            this.props.history.push(\"/\");\n        } catch (err) {\n            console.error('Failed to create scenario', err);\n            this.setState({ isLoading: false });\n        }\n    }\n\n    setFormValue(key, value) {\n        const formValues = this.state.formValues;\n        formValues[key] = value;\n        this.setState({ formValues });\n    }\n\n    handleInputChange(event) {\n        const value = event.target.value;\n        const name = event.target.name;\n        this.setFormValue(name, value);\n    }\n\n    handleBodyPayloadChange(value) {\n        this.setFormValue('body', value);\n    }\n\n    handleHeadersChange(value) {\n        this.setFormValue('headers', value);\n    }\n\n    listTasks = async () => {\n        try {\n            const data = await API.get('cblt', '/tasks');\n            if (data.length !== 0 ) {\n                this.setState({runningTasks:true});\n            }\n        } catch (err) {\n            alert(err);\n        }\n    };\n\n    componentDidMount() { \n        this.listTasks();\n    };\n\n    render() {\n\n        const warning = (\n            <div>\n                <div className=\"box\">\n                    <h1>Create a Load Test</h1>\n                </div>\n                <p className=\"warning\">Warning there is a test running, multiple concurrent tests is currently not supported to avoid hitting the AWS Fargate task limits. Please wait for the test to finish before submitting a new test!</p>\n            </div>\n\n        )\n\n        const heading = (\n            <div className=\"box\">\n                <h1>Create a Load Test</h1>\n                \n            </div>\n        )\n   \n        const createTestForm = (\n            <div>\n\t\t\t\t<div className=\"box\">\n\t\t\t\t\t<h3>Test General Settings</h3>\n\t\t\t\t\t<Row sm=\"2\">\n\t\t\t\t\t\t<Col>\n                            <FormGroup>\n                                <Label for=\"testName\">Test Name</Label>\n                                <Input\n                                    value={this.state.formValues.testName}\n                                    type=\"text\"\n                                    name=\"testName\"\n                                    id=\"testName\"\n                                    required\n                                    onChange={this.handleInputChange}\n                                />\n                                <FormText color=\"muted\">\n                                    The name of your load test, doesn't have to be unique.\n                                </FormText>\n                            </FormGroup>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<FormGroup>\n                                <Label for=\"testDescription\">Test Description</Label>\n                                <Input\n                                    value={this.state.formValues.testDescription}\n                                    type=\"textarea\"\n                                    name=\"testDescription\"\n                                    id=\"testDescription\"\n                                    required\n                                    onChange={this.handleInputChange}\n                                />\n                                <FormText color=\"muted\">\n                                    Short description of the test scenario.\n                                </FormText>\n                            </FormGroup>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row sm=\"2\">\n\t\t\t\t\t\t<Col>\n                            <FormGroup>\n                                <Label for=\"taskCount\">No. of Containers (i.e. Task Count)</Label>\n                                <Input\n                                    value={this.state.formValues.taskCount}\n                                    className=\"form-short\"\n                                    type=\"number\"\n                                    name=\"taskCount\"\n                                    id=\"taskCount\"\n                                    max={50}\n                                    min={1}\n                                    step={1}\n                                    required\n                                    onChange={this.handleInputChange}\n                                />\n                                <FormText color=\"muted\">\n                                    Number of docker containers that will be launched in the Fargate cluster to run the\n                                    test scenario, max value 50.\n                                </FormText>\n                            </FormGroup>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>\n                             <FormGroup>\n                                <Label for=\"concurrency\">No. of Virtual Users (i.e.Concurrency TPS)</Label>\n                                <Input\n                                    value={this.state.formValues.concurrency}\n                                    className=\"form-short\"\n                                    type=\"number\"\n                                    max={200}\n                                    min={1}\n                                    step={1}\n                                    name=\"concurrency\"\n                                    id=\"concurrency\"\n                                    required\n                                    onChange={this.handleInputChange}\n                                />\n                                <FormText color=\"muted\">\n                                    The number of virtual users generated per task, max value 200.\n                                </FormText>\n                            </FormGroup>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row sm=\"2\">\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<FormGroup>\n                                <Label for=\"rampUp\">Start</Label>\n                                <InputGroup className=\"input-group-short\">\n                                    <Input\n                                        value={this.state.formValues.rampUp}\n                                        className=\"form-short\"\n                                        type=\"number\"\n                                        name=\"rampUp\"\n                                        id=\"rampUp\"\n                                        required\n                                        onChange={this.handleInputChange}\n                                    />\n                                    &nbsp;\n                                    <Input\n                                        type=\"select\"\n                                        className=\"form-short\"\n                                        name=\"rampUpUnits\"\n                                        value={this.state.formValues.rampUpUnits}\n                                        id=\"rampUpUnits\"\n                                        onChange={this.handleInputChange}\n                                    >\n                                        <option value=\"m\">minutes</option>\n                                        <option value=\"s\">seconds</option>\n                                    </Input>\n                                </InputGroup>\n\n                                <FormText color=\"muted\">\n                                    The time to reach target concurrency.\n                                </FormText>\n                            </FormGroup>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>\n                            <FormGroup>\n                                <Label for=\"holdFor\">Wait For</Label>\n                                <InputGroup className=\"input-group-short\">\n                                    <Input\n                                        value={this.state.formValues.holdFor}\n                                        className=\"form-short\"\n                                        type=\"number\"\n                                        min={1}\n                                        name=\"holdFor\"\n                                        id=\"holdFor\"\n                                        required\n                                        onChange={this.handleInputChange}\n                                    />\n                                    &nbsp;\n                                    <Input\n                                        type=\"select\"\n                                        value={this.state.formValues.holdForUnits}\n                                        className=\"form-short\"\n                                        name=\"holdForUnits\"\n                                        id=\"holdForUnits\"\n                                        onChange={this.handleInputChange}\n                                    >\n                                        <option value=\"m\">minutes</option>\n                                        <option value=\"s\">seconds</option>\n                                    </Input>\n                                </InputGroup>\n                                <FormText color=\"muted\">\n                                    Time to hold target concurrency.\n                                </FormText>\n                            </FormGroup>        \n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"box\">\n\t\t\t\t\t<h3>Scenario</h3>\n\t\t\t\t\t<Row sm=\"2\">\n\t\t\t\t\t\t<Col>\n                            <FormGroup>\n                                <Label for=\"endpoint\">URL or HTTP endpoint to test</Label>\n                                <Input\n                                    value={this.state.formValues.endpoint}\n                                    type=\"url\"\n                                    name=\"endpoint\"\n                                    id=\"endpoint\"\n                                    required\n                                    onChange={this.handleInputChange}\n                                />\n                                <FormText color=\"muted\">\n                                    Target URL to run tests against, supports http and https. i.e.\n                                    https://example.com:8080.\n                                </FormText>\n                            </FormGroup>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>\n                            <FormGroup>\n                                <Label for=\"method\">HTTP Method</Label>\n                                <Input\n                                    value={this.state.formValues.method}\n                                    className=\"form-short\"\n                                    type=\"select\"\n                                    name=\"method\"\n                                    id=\"method\"\n                                    required\n                                    onChange={this.handleInputChange}\n                                >\n                                    <option>GET</option>\n                                    <option>PUT</option>\n                                    <option>POST</option>\n                                    <option>DELETE</option>\n                                </Input>\n\n                                <FormText color=\"muted\">\n                                    The request method, default is GET.\n                                </FormText>\n                            </FormGroup>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row sm=\"2\">\n\t\t\t\t\t\t<Col>\t\t\t\t\t\n                            <FormGroup>\n                                <Label for=\"testDescription\">HTTP endpoint Headers (Optional)</Label>\n                                <AceEditor\n                                    mode=\"text\"\n                                    theme=\"github\"\n                                    showPrintMargin={true}\n                                    showGutter={true}\n                                    value={this.state.formValues.headers}\n                                    highlightActiveLine={true}\n                                    onChange={this.handleHeadersChange}\n                                    name=\"headers\"\n                                    width=\"100%\"\n                                    height=\"190px\"\n                                    editorProps={{$blockScrolling: true}}\n                                    setOptions={{\n                                        showLineNumbers: true,\n                                        tabSize: 2,\n                                    }}\n                                />\n                                <FormText color=\"muted\">\n                                    A valid JSON object key-value pair containing headers to include in the requests.\n                                </FormText>\n                            </FormGroup>           \n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>\n                            <FormGroup>\n                                <Label>HTTP request Body Payload (Optional)</Label>\n                                <AceEditor\n                                    mode=\"json\"\n                                    theme=\"github\"\n                                    showPrintMargin={true}\n                                    showGutter={true}\n                                    highlightActiveLine={true}\n                                    onChange={this.handleBodyPayloadChange}\n                                    name=\"bodyPayload\"\n                                    value={this.state.formValues.body}\n                                    width=\"100%\"\n                                    height=\"190px\"\n                                    editorProps={{$blockScrolling: true}}\n                                    setOptions={{\n                                        showLineNumbers: true,\n                                        tabSize: 2,\n                                    }}\n                                />\n                                <FormText color=\"muted\">\n                                    A valid JSON object containing any body text to include in the requests.\n                                </FormText>\n                            </FormGroup>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"box\">\n\t\t\t\t\t<Row sm=\"2\">\n\t\t\t\t\t\t<Col>\n                            <FormGroup>\n                                <Label for=\"testNotifyEmail\">Valid Email to Notify</Label>\n                                <Input\n                                    value={this.state.formValues.testNotifyEmail}\n                                    type=\"text\"\n                                    name=\"testNotifyEmail\"\n                                    id=\"testNotifyEmail\"\n                                    required\n                                    onChange={this.handleInputChange}\n                                />\n                                <FormText color=\"muted\">\n                                    After START TEST, user will get the confirmation email to subscribe to receive the Test Results post Test completion.\n                                </FormText>\n                            </FormGroup>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>\n                            <Button\n                                className=\"submit\"\n                                size=\"sm\"\n                                onClick={this.handleSubmit}\n                                disabled={this.state.runningTasks}\n                            >\n                                Start Test\n                            </Button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</div>\n\t\t\t</div>\n        );\n\n        return (\n            <div>\n                <form ref={this.form} onSubmit={e => e.preventDefault()}>\n                    \n                    { this.state.runningTasks? warning : heading }\n\n                    <div>\n                        {this.state.isLoading? <div className=\"loading\"><Spinner color=\"secondary\" /></div> : createTestForm}\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Create;\n","/*******************************************************************************\n * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved. \n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0    \n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n *\n ********************************************************************************/\nimport React from 'react';\nimport { Row, Col, Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\n\nclass Results extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.toggle = this.toggle.bind(this);\n        this.state = {\n          info: false\n        };\n      }\n    \n      toggle() {\n        this.setState({\n            info: !this.state.info\n        });\n      }\n \n      render() {    \n        const results = this.props.data.results || {};\n\n        let errors;\n        if (results.rc && results.rc.length > 0) {\n            errors = results.rc.map((err) =>\n                <Col sm=\"3\" key={err.code}>\n                    <div className=\"result error\">\n                        <b>Error {err.code}:</b><span>{err.count}</span>\n                    </div>\n                </Col>\n            );\n        }\n        \n        return (\n            <div>\n                <div className=\"box\">\n                    <h2>Test Results</h2>\n                    <Button id=\"info\" color=\"link\"><FontAwesomeIcon id=\"icon\" icon={faInfoCircle} /> Info</Button>\n                    <Row>\n                        <Col sm=\"3\">\n                            <div className=\"result\">\n                                Avg Response Time\n                                <p>{results.avg_rt}s</p>\n                            </div>\n                        </Col>\n                        <Col sm=\"3\">\n                            <div className=\"result\">\n                                Avg Latency\n                                <p>{results.avg_lt}s</p>\n                            </div>\n                        </Col>\n                        <Col sm=\"3\">\n                            <div className=\"result\">\n                                Avg Conection Time\n                                <p>{results.avg_ct}s</p>\n                            </div>\n                        </Col>\n                        <Col sm=\"3\">\n                            <div className=\"result\">\n                                Avg Bandwidth\n                                <p>{ Math.round(results.bytes * 0.01) /10 } kbps</p>\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"3\">\n                            <div className=\"result\">\n                                <b>Total Requests:</b><span>{results.throughput}</span>\n                            </div>\n                        </Col>\n                        <Col sm=\"3\">\n                            <div className=\"result\">\n                                <b>Success Count:</b><span>{results.succ}</span>\n                            </div>\n                        </Col>\n                        <Col sm=\"3\">\n                            <div className=\"result\">\n                                <b>Error Count:</b><span>{results.fail}</span>\n                            </div>\n                        </Col>\n                        <Col sm=\"3\">\n                            <div className=\"result\">\n                                <b>Avg Task Duration:</b><span>{Math.round(results.testDuration /60)}m</span>\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                    { errors }\n                    </Row>\n                    <Row>\n                        <Col sm=\"3\">\n                            <h3>Percentile Response Time</h3>\n                            <div className=\"result\">\n                                <b>100%:</b><span>{results.p100_0}s</span>\n                            </div>\n                            <div className=\"result\">\n                                <b>99.9%:</b><span>{results.p99_9}s</span>\n                            </div>\n                            <div className=\"result\">\n                                <b>99%:</b><span>{results.p99_0}s</span>\n                            </div>\n                            <div className=\"result\">\n                                <b>95%:</b><span>{results.p95_0}s</span>\n                            </div>\n                            <div className=\"result\">\n                                <b>90%:</b><span>{results.p90_0}s</span>\n                            </div>\n                            <div className=\"result\">\n                                <b>50%:</b><span>{results.p50_0}s</span>\n                            </div>\n                            <div className=\"result\">\n                                <b>0%:</b><span>{results.p0_0}s</span>\n                            </div>\n                        </Col>\n                        <Col sm=\"9\">\n                            <img src={`data:image/jpeg;base64,${this.props.data.metricWidgetImage}`} alt='avRt' />\n                        </Col>\n                    </Row>\n            </div>\n        \n        <Popover className=\"info\" placement=\"top\" isOpen={this.state.info} target=\"info\" toggle={this.toggle}>\n          <PopoverHeader>Results Details</PopoverHeader>\n          <PopoverBody>\n            <li><b>Avg Response Time (AvgRt):</b> the average response time in seconds for all requests.</li>\n            <li><b>Avg Latency (AvgLt):</b> the average latency in seconds for all requests </li>\n            <li><b>Avg Connection Time (AvgCt):</b> the average connection time in seconds for all requests </li>\n            <li><b>Avg Bandwidth:</b> the average bandwidth in kilobytes per second for all requests  </li>\n            <li><b>Percentiles:</b> percentile levels for the response time, 0 is also minimum response time, 100 is maximum response time </li>\n          </PopoverBody>\n        </Popover>\n\n        </div>\n        )\n    }\n\n}\n\nexport default Results;\n","/*******************************************************************************\n * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved. \n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0    \n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n *\n ********************************************************************************/\nimport React from 'react';\nimport { Row, Col } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n//import awsConfig from '../../aws_config';\ndeclare var awsConfig;\n\nclass Running extends React.Component {\n\n    render() {\n\n        let provisioning = 0;\n        let pending = 0;\n        let running = 0;\n\n        for (let task in this.props.data.tasks) {\n               // eslint-disable-next-line default-case\n            switch (this.props.data.tasks[task].lastStatus) {\n                case 'PROVISIONING':\n                    ++provisioning\n                    break;\n                case 'PENDING':\n                    ++pending\n                    break;\n                case 'RUNNING':\n                    ++running\n                    break;\n            }\n        }\n            \n        return (\n            <div>\n                <div className=\"box\">\n                    <h3>Tasks Status:</h3>\n                    <span className=\"console\">\n                        Details for the running tasks can be viewed in the <a className=\"text-link\" \n                        href={ awsConfig.ecs_dashboard}\n                        target=\"_blank\" \n                        rel=\"noopener noreferrer\">\n                            Amazon ECS Console <FontAwesomeIcon size=\"sm\" icon={faExternalLinkAlt}/>\n                        </a>\n                    </span>\n\n                    <Row>\n                        <Col sm=\"3\">\n                            <div className=\"result\">\n                                <b>Task Count:</b><span>{this.props.data.tasks.length} of {this.props.data.taskCount}</span>\n                            </div>\n                        </Col>\n                        <Col sm=\"3\">\n                            <div className=\"result\">\n                                <b>Provisioning Count:</b><span>{provisioning}</span>\n                            </div>\n                        </Col>\n                        <Col sm=\"3\">\n                            <div className=\"result\">\n                                <b>Pending Count:</b><span>{pending}</span>\n                            </div>\n                        </Col>\n                        <Col sm=\"3\">\n                            <div className=\"result\">\n                                <b>Running Count:</b><span>{running}</span>\n                            </div>\n                        </Col>\n                    </Row>\n                </div>\n                <div className=\"box\">\n                <h3>Realtime Avg Response Times</h3>\n                    <p className=\"console\">\n                    The realtime Average response times can be monitored using the <a className=\"text-link\" \n                        href={ awsConfig.cw_dashboard}\n                        target=\"_blank\" \n                        rel=\"noopener noreferrer\">\n                        Amazon CloudWatch Metrics Dashboard <FontAwesomeIcon size=\"sm\" icon={faExternalLinkAlt}/>\n                        </a> \n                    </p>\n                    <p className=\"note\"> Response times will start to populate once the tasks are running, task are launched in batches of 10  \n                        and it can take 1-2 minutes for all tasks to be running.</p>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default Running;\n","/*******************************************************************************\n * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved. \n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0    \n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n *\n ********************************************************************************/\nimport React from 'react';\nimport { Table } from 'reactstrap';\n\nclass Results extends React.Component {\n \n      render() {    \n        const history = this.props.data.history || [];\n        \n        return (\n            <div>\n\n            <div className=\"box\">\n            <h2>Results History</h2>\n            <Table borderless responsive>\n                <thead>\n                    <tr>\n                        <th>RunTime</th>\n                        <th>AvgRt</th>\n                        <th>AvgLt</th>\n                        <th>AvgCt</th>\n                        <th>100%</th>\n                        <th>99.9%</th>\n                        <th>99.0%</th>\n                        <th>95%</th>\n                        <th>90%</th>\n                        <th>50%</th>\n                        <th>0%</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {history.map (i => (\n                        <tr key= { i.id}>\n                            <td>{ i.endTime}</td>\n                            <td>{ i.results.avg_rt}</td>\n                            <td>{ i.results.avg_lt}</td>\n                            <td>{ i.results.avg_ct}</td>\n                            <td>{ i.results.p100_0}</td>\n                            <td>{ i.results.p99_9}</td>\n                            <td>{ i.results.p99_0}</td>\n                            <td>{ i.results.p95_0}</td>\n                            <td>{ i.results.p90_0}</td>\n                            <td>{ i.results.p50_0}</td>\n                            <td>{ i.results.p0_0}</td>\n                        </tr>\n                    ))}\n                </tbody>\n                </Table>\n           </div>\n\n        </div>\n        )\n    }\n\n}\n\nexport default Results;\n","/*******************************************************************************\n * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved. \n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0    \n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n *\n ********************************************************************************/\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col, Spinner } from 'reactstrap';\nimport { API } from 'aws-amplify';\n\nimport Results from '../Results/Results.js';\nimport Running from '../Running/Running.js';\nimport History from '../History/History.js';\n\nclass Details extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: true,\n            deleteModal: false,\n            cancelModal: false,\n            testId: props.location.state,\n            data:{\n                results:{},\n                history:[],\n                concurrency:null,\n                rampUp:null,\n                holdFor: null,\n                endpoint:null,\n                taskArns:[],\n                testScenario:{\n                    execution:[],\n                    reporting:[],\n                    scenarios:{}\n                }\n            }\n        }\n        this.deleteToggle = this.deleteToggle.bind(this);\n        this.deleteTest = this.deleteTest.bind(this);\n        this.cancelToggle = this.cancelToggle.bind(this);\n        this.cancelTest = this.cancelTest.bind(this);\n    };\n\n    deleteToggle() {\n        this.setState(prevState => ({\n            deleteModal: !prevState.deleteModal\n        }));\n    }\n\n    cancelToggle() {\n        this.setState(prevState => ({\n            cancelModal: !prevState.cancelModal\n        }));\n    }\n\n    deleteTest= async () => {\n        const { testId } = this.state.testId;\n        try {\n            await API.del('cblt', `/scenarios/${testId}`);\n        } catch (err) {\n            alert(err);\n        }\n        this.props.history.push(\"dashboard\");\n    }\n\n    cancelTest = async () => {\n        const { testId } = this.state.testId;\n        try {\n            await API.post('cblt', `/scenarios/${testId}`);\n        } catch (err) {\n            alert(err);\n        }\n        this.props.history.push(\"dashboard\");\n    }\n\n    reloadData = async () => { \n        this.setState({\n            isLoading: true,\n            data:{\n                results:{},\n                history:[],\n                concurrency:null,\n                rampUp:null,\n                holdFor: null,\n                endpoint:null,\n                method:null,\n                body:{},\n                header:{},\n                taskArns:[]\n            }\n        })\n        await this.getTest();\n    }\n\n    getTest = async () => {\n        const { testId } = this.state.testId;\n        try {\n            const data = await API.get('cblt', `/scenarios/${testId}`);\n            data.concurrency = data.testScenario.execution[0].concurrency;\n            data.rampUp = data.testScenario.execution[0]['ramp-up'];\n            data.holdFor = data.testScenario.execution[0]['hold-for'];\n            data.endpoint = data.testScenario.scenarios[Object.keys(data.testScenario.scenarios)[0]].requests[0].url;\n            data.method = data.testScenario.scenarios[Object.keys(data.testScenario.scenarios)[0]].requests[0].method;\n            data.body = data.testScenario.scenarios[Object.keys(data.testScenario.scenarios)[0]].requests[0].body;\n            data.headers = data.testScenario.scenarios[Object.keys(data.testScenario.scenarios)[0]].requests[0].headers;\n\n            this.setState({\n                isLoading:false,\n                data:data\n            });\n        } catch (err) {\n            console.log(err);\n            alert(err);\n        }\n    }\n  \n    componentDidMount= async () => {\n        await this.getTest();\n      }\n   \n    render() {\n\n        const { data } = this.state;\n        \n        const cancelled = (\n            <div className=\"box\">\n                <h2>Test Results</h2>\n                <p>No results available as the test was cancelled.</p>\n                </div>\n        )\n\n        const details = (\n            <div>\n                {(() => {\n                    switch (data.status) {\n                    case 'running':\n                        return (\n                            <div className=\"box\">\n                            <h1>Load Test Details</h1>\n                            <Button color=\"danger\" onClick={this.cancelToggle} size=\"sm\">Cancel</Button>\n                            <Button onClick={ this.reloadData } size=\"sm\">Refresh</Button>\n                        </div>\n                        );\n                    default:\n                        return (\n                            <div className=\"box\">\n                            <h1>Load Test Details</h1> \n                            <Button color=\"danger\" onClick={this.deleteToggle} size=\"sm\">Delete</Button>\n                            <Link to= {{\n                                    pathname:\"/create\",\n                                    state:{ data }\n                                }}>\n                            <Button size=\"sm\">Update</Button>\n                            </Link>\n                        </div>\n                        );\n                    }\n                })()}\n\n                <div className=\"box\">\n                    <Row>\n                        <Col sm=\"7\">\n                            <Row className=\"detail\">\n                                <Col sm=\"3\"><b>Test ID</b></Col>\n                                <Col sm=\"9\">{data.testId}</Col>\n                            </Row>\n                            <Row className=\"detail\">\n                                <Col sm=\"3\"><b>Test Name</b></Col>\n                                <Col sm=\"9\">{data.testName}</Col>\n                            </Row>\n                            <Row className=\"detail\">\n                                <Col sm=\"3\"><b>Test Description</b></Col>\n                                <Col  sm=\"9\">{data.testDescription}</Col>\n                            </Row>\n                            <Row className=\"detail\">\n                                <Col sm=\"3\"><b>HTTP URL or Endpoint</b></Col>\n                                <Col  sm=\"9\">{ data.endpoint }</Col>\n                            </Row>\n                           \n                            <Row className=\"detail\">\n                                <Col sm=\"3\"><b>HTTP request Body</b></Col>\n                                <Col  sm=\"9\">{ JSON.stringify(data.body) }</Col>\n                            </Row>\n                            <Row className=\"detail\">\n                                <Col sm=\"3\"><b>HTTP request Headers</b></Col>\n                                <Col  sm=\"9\">{ JSON.stringify(data.headers) }</Col>\n                            </Row>\n                        </Col>\n                        <Col sm=\"5\">\n                        <Row className=\"detail\">\n                                <Col sm=\"4\"><b>Test Status</b></Col>\n                                <Col className={data.status} sm=\"8\">{data.status}</Col>\n                            </Row>\n                            <Row className=\"detail\">\n                                <Col sm=\"4\"><b>Last RAN</b></Col> \n                                <Col  sm=\"8\">{data.startTime}</Col>\n                            </Row>\n                            <Row className=\"detail\">\n                                <Col sm=\"4\"><b>No. of Containers (i.e. Task Count)</b></Col>\n                                <Col  sm=\"8\">{data.taskCount}</Col>\n                            </Row>\n                            <Row className=\"detail\">\n                                <Col sm=\"4\"><b>HTTP Method</b></Col>\n                                <Col  sm=\"8\">{ data.method }</Col>\n                            </Row>\n                            <Row className=\"detail\">\n                                <Col sm=\"4\"><b>No. of Virtual users (i.e. Concurrency TPS)</b></Col>\n                                <Col  sm=\"8\">{ data.concurrency }</Col>\n                            </Row>\n                            <Row className=\"detail\"> \n                                <Col sm=\"4\"><b>Start</b></Col>\n                                <Col  sm=\"8\">{ data.rampUp }</Col>\n                            </Row>\n                            <Row className=\"detail\">\n                                <Col sm=\"4\"><b>Wait For</b></Col>\n                                <Col  sm=\"8\">{ data.holdFor }</Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </div>\n              \n                {(() => {\n                    switch (data.status) {\n                    case 'complete':\n                        return <Results data={data} />;\n                    case 'cancelled':\n                        return <div>{cancelled}</div>;\n                    default:\n                        return <Running data={data} />;\n                    }\n                })()}\n                \n                {data.status ==='running'? <div></div> :  <History data={data} /> }\n\n            </div>\n        )\n\n        return (\n            <div>\n\n                { this.state.isLoading?  <div className=\"loading\"><Spinner color=\"secondary\" /></div> : details }\n\n                <Modal isOpen={this.state.deleteModal} toggle={this.deleteToggle}>\n                    <ModalHeader>Warning</ModalHeader>\n                    <ModalBody>\n                        This will delete the test scenario and all of of the results\n                </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"link\" size=\"sm\" onClick={this.deleteToggle}>Cancel</Button>\n                        <Button color=\"danger\" size=\"sm\" onClick={this.deleteTest}>Delete</Button>\n                    </ModalFooter>\n                </Modal>\n\n                <Modal isOpen={this.state.cancelModal} toggle={this.cancelToggle}>\n                    <ModalHeader>Warning</ModalHeader>\n                    <ModalBody>\n                        This will stop all running tasks amd end the test.\n                </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"link\" size=\"sm\" onClick={this.cancelToggle}>Cancel</Button>\n                        <Button color=\"danger\" size=\"sm\" onClick={this.cancelTest}>Cancel Test</Button>\n                    </ModalFooter>\n                </Modal>\n            \n            </div>\n        )\n    }\n\n}\n\nexport default Details;\n","/*******************************************************************************\n * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n *\n ********************************************************************************/\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAws } from '@fortawesome/free-brands-svg-icons';\nimport { faPlusSquare, faSignOutAlt, faBars, faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem\n} from 'reactstrap';\n\n//Amplify\nimport Amplify, { Auth } from 'aws-amplify';\nimport { withAuthenticator, AmplifyTheme } from 'aws-amplify-react';\n//import awsConfig from './aws_config' already commented\n\n//Components\nimport Dashboard from './Components/Dashboard/Dashboard.js';\nimport Create from './Components/Create/Create.js';\nimport Details from './Components/Details/Details.js';\n\ndeclare var awsConfig;\nAmplify.configure(awsConfig);\n//Amplify.Logger.LOG_LEVEL = 'DEBUG';\n\nconst loginTheme = {\n  sectionFooterSecondaryContent:{\n    ...AmplifyTheme.sectionFooterSecondaryContent,\n    display:\"none\"\n  }\n\n};\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.noMatch = this.noMatch.bind(this);\n    this.signOut = this.signOut.bind(this);\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n    this.state = {\n      collapsed: true\n    };\n  }\n\n  noMatch({ location }) {\n    return (\n      <div>\n        <h3>\n          Error 404 Page not found: <code>{location.pathname}</code>\n        </h3>\n      </div>\n    );\n  }\n\n  toggleNavbar() {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  }\n\n  signOut() {\n    Auth.signOut();\n    window.location.reload();\n  }\n\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <Navbar color=\"light\" light fixed=\"top\" expand=\"md\">\n            <NavbarBrand href=\"/\">Cloud Based Load & Performance Testing </NavbarBrand>\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\n            <Collapse isOpen={!this.state.collapsed} navbar>\n            <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <Link to={'/dashboard'} className=\"nav-link\">\n                <FontAwesomeIcon id=\"icon\" icon={faBars} /> Dashboard\n              </Link>\n            </NavItem>\n            <NavItem>\n              <Link to= {{\n                    pathname:\"/create\",\n                    state:{ data:{}}\n                    }}\n                    className=\"nav-link\"\n              >\n                <FontAwesomeIcon id=\"icon\" icon={faPlusSquare} /> Create Test\n              </Link>\n            </NavItem>\n            </Nav>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <Link to=\"\" onClick={this.signOut} className=\"nav-link\">\n                    <FontAwesomeIcon id=\"icon\" icon={faSignOutAlt} /> Sign Out\n                  </Link>\n                </NavItem>\n              </Nav>\n              </Collapse>\n          </Navbar>\n\n          <div className=\"main\">\n            <Switch>\n              <Route path=\"/\" exact component={Dashboard} />\n              <Route path=\"/dashboard\" exact component={Dashboard} />\n              <Route path=\"/create/\" component={Create} />\n              <Route path=\"/details/\" component={Details} />\n              <Route component={this.noMatch} />\n            </Switch>\n          </div>\n        </Router>\n\n      </div>\n    )\n  }\n}\n\n//export default App;\nexport default withAuthenticator(App,false,[],null,loginTheme);\n","/*******************************************************************************\n * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved. \n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0    \n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n *\n ********************************************************************************/\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/*******************************************************************************\n * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved. \n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0    \n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n *\n ********************************************************************************/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}